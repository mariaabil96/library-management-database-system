# CREATE DATABASE
CREATE DATABASE LIBRARY;
# USING LIBRARY DATABASE
USE LIBRARY;
# CREATE TABLE BRANCH
CREATE TABLE Branch
(
Branch_no VARCHAR(10) PRIMARY KEY,
Manager_id VARCHAR(10),
Branch_address VARCHAR(30),
Contact_no VARCHAR(15)
);
DESC branch;

#CREATE TABLE Employee
CREATE TABLE Employee
(
Emp_id VARCHAR(10) PRIMARY KEY,
Emp_name VARCHAR(30),
Position VARCHAR(30),
Salary DECIMAL(10,2),
Branch_no VARCHAR(10),
FOREIGN KEY (Branch_no) REFERENCES Branch(Branch_no) 
);
DESC employee;  
#CREATE TABLE Books
CREATE TABLE Books
(
ISBN VARCHAR(30) PRIMARY KEY,
Book_title VARCHAR(1000),
Category VARCHAR(30),
Rental_Price DECIMAL(10,2),
Status ENUM('Yes','No'),
Author VARCHAR(30),
Publisher VARCHAR(30)
);
DESC Books;
#CREATE TABLE Customer
CREATE TABLE Customer
(
Customer_Id VARCHAR(10) PRIMARY KEY,
Customer_name VARCHAR(30),
Customer_address VARCHAR(30),
Reg_date DATE
);
DESC customer;
#CREATE TABLE IssueStatus
CREATE TABLE IssueStatus
(
Issue_Id VARCHAR(10) PRIMARY KEY,
Issued_cust VARCHAR(10),
Issued_book_name VARCHAR(50),
Issue_date DATE,
Isbn_book VARCHAR(30),
FOREIGN KEY (Issued_cust) REFERENCES customer(Customer_id) on DELETE CASCADE,
FOREIGN KEY (Isbn_book) REFERENCES books(ISBN) on DELETE CASCADE
);
DESC issuestatus;
#CREATE TABLE ReturnStatus
CREATE TABLE ReturnStatus
(
Return_id VARCHAR(10) PRIMARY KEY,
Return_cust VARCHAR(30),
Return_book_name VARCHAR(50),
Return_date DATE,
isbn_book2 VARCHAR(30),
FOREIGN KEY (isbn_book2) REFERENCES books(ISBN) on DELETE CASCADE
);
DESC returnstatus;



#INSERTING VALUES TO BRANCH TABLE
INSERT INTO BRANCH(Branch_no , Manager_id , Branch_address , Contact_no) VALUES ('B1', 'M1 ','ERNAKULAM','919099988676'),
('B2', 'M2 ','KOTTAYAM','919099988677'),
('B3', 'M3 ','PATHANAMTHITTA','919099988678'),
('B4', 'M4 ','KOZHIKOD','919099988679'),
('B5', 'M5 ','THRISSUR','919099988680');

#DISPLAYING BRANCH TABLE
SELECT * FROM BRANCH;

INSERT INTO EMPLOYEE(Emp_id,Emp_name,Position,Salary,branch_no) VALUES ('E1', 'ABIL SEBASTIAN', 'Manager', '60000', 'B1'),
('E2', 'MARIA JOSE', 'Clerk', '45000', 'B2'),
('E3', 'ANNIE JOHN', 'Librarian', '55000', 'B3'),
('E4', 'JOJO JOSE', 'Assistant', '40000', 'B4'),
('E5', 'ROSE MARIA JOSE', 'Assistant', '42000', 'B2'),
('E6', 'JOMINA JOSEPH', 'Assistant', '43000', 'B3'),
('E7', 'ANEESHA MOL', 'Manager', '62000', 'B2'),
('E8', 'MARTIN SANTHOSH', 'Clerk', '46000', 'B3'),
('E9', 'MAREENA CLEETUS', 'Librarian', '57000', 'B4'),
('E10', 'KRISTIN ZAC', 'Assistant', '41000', 'B4'),
('E11', 'BABY JOSEPH', 'Manager', '65000', 'B5');

#DISPLAYING EMPLOYEE TABLE
SELECT * FROM EMPLOYEE;

#INSERTING VALUES TO BOOKS TABLE
INSERT INTO BOOKS(ISBN,Book_title,Category,Rental_Price,Status,Author,Publisher) VALUES ('978-0-09-957807-9', 'A Game of Thrones', 'Fantasy', 10, 'Yes', 'George R.R. Martin', 'abc'),
('978-0-14-044930-3', 'The Lord of the Rings', 'Fantasy', 15, 'Yes', 'JRR Tolkien.', 'def'),
('978-0-14-118776-1', 'NAME OF WIND', 'Fantasy', 20, 'Yes', 'Patrick Rothfuss', 'ghi'),
('978-0-141-44171-6', 'Fried Green Tomatoes at the Whistle Stop Cafe', 'Fiction', 7, 'Yes', 'Fannie Flagg', 'jkl'),
('978-0-19-280551-1', 'The Travelling Cat Chronicles', 'Fiction', 12, 'No', 'Hiro Arikawa', 'mno'),
('978-0-307-37840-1', 'Vanishing maps', 'Fiction', 7, 'Yes', 'cristina garcia', 'pqr'),
('978-0-307-58837-1', 'guns of august', 'History', 9, 'Yes', 'babba', 'stu'),
('978-0-330-25864-8', 'freedom fighter', 'History', 8, 'No', 'ramakrishnan', 'vw'),
('978-0-375-41398-8', '1947', 'History', 5.5, 'Yes', 'rasa rao', 'xy'),
('978-0-393-05081-8', 'socialism', 'History', 6.5, 'Yes', 'patel singh', 'za'),
('978-0-393-91257-8', 'jai bharat', 'History', 9, 'No', 'arrrav singh', 'bdf'),
('978-0-525-47535-5', 'hamlet', 'Classic', 7, 'Yes', 'shakespere', 'ldr'),
('978-0-553-29698-2', 'pride and prejudice', 'Classic', 8, 'Yes', 'jane austen', 'bts'),
('978-0-679-76489-8', 'wuthering heights', 'Classic', 7, 'Yes', 'emily', 'bro');


#DISPLAYING BOOKS TABLE
SELECT * FROM BOOKS;

INSERTING VALUES TO CUSTOMER TABLE
INSERT INTO CUSTOMER(Customer_Id,Customer_name,Customer_address,Reg_date) VALUES ('C1', 'Alice Johnson ','123abc st','2021-05-12'),
('C2', 'Benny Joseph ','456 def st','2021-05-06'),
('C3', 'Carolin Davis ','789 oo St','2021-02-03'),
('C4', 'Denny Wilson ','567 Po St','2021-08-04'),
('C5', 'Elizabeth Brown ','890 Mm St','2021-02-21'),
('C6', 'Francis Thomas ','789 oo St','2021-02-03'),
('C7', 'Grace Taylor ','123abc st','2021-01-24'),
('C8', 'Henna Anson ','456 Bi St','2021-05-01'),
('C9', 'Irin Martin ','567 Oak St','2022-04-30'),
('C10', 'Jacky Wilson ','789 oo St','2022-12-01');

#DISPLAYING CUSTOMER TABLE
SELECT * FROM CUSTOMER;
#INSERTING VALUES TO IssueStatus TABLE
INSERT INTO IssueStatus(Issue_Id,Issued_cust,Issue_date,Issued_book_name,Isbn_book) VALUES ('IS1', 'C1','2023-05-01','abc','978-0-553-29698-2'),
('IS2', 'C2','2023-05-02','cde','978-0-141-44171-6'),
('IS3', 'C3','2023-05-03','gfd','978-0-307-58837-1'),
('IS4', 'C4','2023-05-04','poi','978-0-09-957807-9'),
('IS5', 'C5','2023-05-05','jkl','978-0-14-044930-3');


#DISPLAYING IssueStatus TABLE
SELECT * FROM IssueStatus;

#INSERTING VALUES TO ReturnStatus TABLE
INSERT INTO ReturnStatus(Return_id,Return_cust,Return_date,Return_book_name,isbn_book2) VALUES 
('RS1', 'C1 ','2023-06-06','ggg','978-0-553-29698-2'),
('RS2', 'C2 ','2023-06-07','kkkk','978-0-679-76489-8'),
('RS3', 'C5 ','2023-06-08','sss','978-0-525-47535-5'),
('RS4', 'C8 ','2023-06-09','sssdf','978-0-393-91257-8'),
('RS5', 'C10 ','2023-06-10','ddd','978-0-14-044930-3');



#DISPLAYING ReturnStatus TABLE
SELECT * FROM ReturnStatus;

#1.Retrieve the book title, category, and rental price of all available books. 

SELECT book_title, category, rental_price FROM books WHERE Status = 'Yes';

#2. List the employee names and their respective salaries in descending order of salary. 
SELECT emp_name, salary FROM employee ORDER BY Salary DESC;

#3. Retrieve the book titles and the corresponding customers who have issued those books. 

SELECT issuestatus.Issued_book_name, customer.Customer_name FROM issuestatus INNER JOIN
customer on issuestatus.Issued_cust = customer.Customer_Id;

#4. Display the total count of books in each category. 
SELECT Category, COUNT(Book_title) FROM books GROUP BY Category;
5. Retrieve the employee names and their positions for the employees whose salaries are above Rs.50,000. 
SELECT emp_name, position FROM employee WHERE Salary > 50000;
 
6. List the customer names who registered before 2022-01-01 and have not issued any books yet. 

SELECT customer_name FROM customer WHERE Reg_date < '2022-01-01' AND Customer_Id NOT IN
(SELECT issued_cust FROM issuestatus);
 
7. Display the branch numbers and the total count of employees in each branch. 


SELECT branch_no, COUNT(emp_id) FROM employee GROUP BY branch_no;
 

8. Display the names of customers who have issued books in the month of June 2023.

SELECT customer.Customer_name FROM customer INNER JOIN issuestatus ON 
customer.Customer_Id = issuestatus.Issued_cust WHERE issuestatus.Issue_date >= '2023-06-01' AND 
issuestatus.Issue_date <= '2023-06-30';
 
9. Retrieve book_title from book table containing history. 

SELECT book_title FROM books WHERE Category = 'history';

10.Retrieve the branch numbers along with the count of employees for branches having more than 5 employees

SELECT branch_no, COUNT(emp_id) FROM employee GROUP BY branch_no HAVING COUNT(Emp_id) > 5;
 
11. Retrieve the names of employees who manage branches and their respective branch addresses.

SELECT EMPLOYEE.branch_no, Emp_name, Branch_address FROM employee LEFT JOIN  BRANCH ON  employee.branch_no=BRANCH.branch_no where Position='Manager';

12.  Display the names of customers who have issued books with a rental price higher than Rs. 25.
SELECT Customer_name FROM CUSTOMER WHERE Customer_Id IN (SELECT Issued_cust FROM issuestatus inner join BOOKS ON issuestatus.Isbn_book=BOOKS.ISBN WHERE Rental_Price
>25);


